/**
 * @packageDocumentation
 * @module api.functional.auth.admin_register
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, IPropagation } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { AdminRegisterDTO } from "../../../structures/AdminRegisterDTO";
import type { FailedRequest } from "../../../structures/FailedRequest";
import type { SuccesfulRequestnull } from "../../../structures/SuccesfulRequestnull";

/**
 * @controller AuthController.adminRegister
 * @path POST /auth/admin-register
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function adminRegister(
  connection: IConnection,
  body: adminRegister.Input,
): Promise<adminRegister.Output> {
  return PlainFetcher.propagate<any, any>(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...adminRegister.METADATA,
      template: adminRegister.METADATA.path,
      path: adminRegister.path(),
    },
    body,
  );
}
export namespace adminRegister {
  export type Input = AdminRegisterDTO;
  export type Output = IPropagation<
    {
      201: SuccesfulRequestnull | FailedRequest;
    },
    201
  >;

  export const METADATA = {
    method: "POST",
    path: "/auth/admin-register",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/auth/admin-register";
}
