"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.login = login;
exports.refresh = refresh;
exports.logout = logout;
const PlainFetcher_1 = require("@nestia/fetcher/lib/PlainFetcher");
/**
 * @controller AuthController.login
 * @path POST /auth/login
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function login(connection, body) {
    return PlainFetcher_1.PlainFetcher.propagate({
        ...connection,
        headers: {
            ...connection.headers,
            "Content-Type": "application/json",
        },
    }, {
        ...login.METADATA,
        template: login.METADATA.path,
        path: login.path(),
    }, body);
}
(function (login) {
    login.METADATA = {
        method: "POST",
        path: "/auth/login",
        request: {
            type: "application/json",
            encrypted: false,
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 201,
    };
    login.path = () => "/auth/login";
})(login || (exports.login = login = {}));
/**
 * @controller AuthController.refresh
 * @path GET /auth/refresh
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function refresh(connection) {
    return PlainFetcher_1.PlainFetcher.propagate(connection, {
        ...refresh.METADATA,
        template: refresh.METADATA.path,
        path: refresh.path(),
    });
}
(function (refresh) {
    refresh.METADATA = {
        method: "GET",
        path: "/auth/refresh",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 200,
    };
    refresh.path = () => "/auth/refresh";
})(refresh || (exports.refresh = refresh = {}));
/**
 * @controller AuthController.logout
 * @path POST /auth/logout
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function logout(connection) {
    return PlainFetcher_1.PlainFetcher.propagate(connection, {
        ...logout.METADATA,
        template: logout.METADATA.path,
        path: logout.path(),
    });
}
(function (logout) {
    logout.METADATA = {
        method: "POST",
        path: "/auth/logout",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 201,
    };
    logout.path = () => "/auth/logout";
})(logout || (exports.logout = logout = {}));
