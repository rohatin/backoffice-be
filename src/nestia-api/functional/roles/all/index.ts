/**
 * @packageDocumentation
 * @module api.functional.roles.all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, IPropagation } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { FailedRequest } from "../../../structures/FailedRequest";
import type { SuccesfulRequestArrayPermissionDTO } from "../../../structures/SuccesfulRequestArrayPermissionDTO";

/**
 * @controller RoleController.getAllPermissions
 * @path GET /roles/all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAllPermissions(
  connection: IConnection,
): Promise<getAllPermissions.Output> {
  return PlainFetcher.propagate<any>(connection, {
    ...getAllPermissions.METADATA,
    template: getAllPermissions.METADATA.path,
    path: getAllPermissions.path(),
  });
}
export namespace getAllPermissions {
  export type Output = IPropagation<
    {
      200: SuccesfulRequestArrayPermissionDTO | FailedRequest;
    },
    200
  >;

  export const METADATA = {
    method: "GET",
    path: "/roles/all",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/roles/all";
}
