/**
 * @packageDocumentation
 * @module api.functional.users.all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, IPropagation } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { FailedRequest } from "../../../structures/FailedRequest";
import type { SuccesfulRequestArrayUserDTO } from "../../../structures/SuccesfulRequestArrayUserDTO";

/**
 * @controller UserController.findAll
 * @path GET /users/all
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function findAll(
  connection: IConnection,
): Promise<findAll.Output> {
  return PlainFetcher.propagate<any>(connection, {
    ...findAll.METADATA,
    template: findAll.METADATA.path,
    path: findAll.path(),
  });
}
export namespace findAll {
  export type Output = IPropagation<
    {
      200: SuccesfulRequestArrayUserDTO | FailedRequest;
    },
    200
  >;

  export const METADATA = {
    method: "GET",
    path: "/users/all",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/users/all";
}
