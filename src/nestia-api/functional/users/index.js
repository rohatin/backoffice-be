"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.all = void 0;
exports.findById = findById;
const PlainFetcher_1 = require("@nestia/fetcher/lib/PlainFetcher");
exports.all = __importStar(require("./all"));
/**
 * @controller UserController.findById
 * @path GET /users/:userId
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function findById(connection, targetUserId) {
    return PlainFetcher_1.PlainFetcher.propagate(connection, {
        ...findById.METADATA,
        template: findById.METADATA.path,
        path: findById.path(targetUserId),
    });
}
(function (findById) {
    findById.METADATA = {
        method: "GET",
        path: "/users/:userId",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 200,
    };
    findById.path = (targetUserId) => { var _a; return `/users/${encodeURIComponent((_a = targetUserId === null || targetUserId === void 0 ? void 0 : targetUserId.toString()) !== null && _a !== void 0 ? _a : "null")}`; };
})(findById || (exports.findById = findById = {}));
